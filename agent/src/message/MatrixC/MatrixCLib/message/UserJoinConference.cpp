///////////////////////////////
// Message definition file
// Generated by lyvc Message
///////////////////////////////

#include "stdafx.h"
#include "UserJoinConference.h"

string LyvcMessage::UserJoinConference::toXML()
{
	const int BUFFERSIZE=64;
	char buffer[BUFFERSIZE];
	string xml;
	xml = xml + "<lyvcmessage>";
	xml = xml + "<id>";
	_snprintf(buffer, BUFFERSIZE, "%I32d", id);
	xml = xml + buffer;
	xml = xml + "</id>";
	xml = xml + "<_senderid>";
	_snprintf(buffer, BUFFERSIZE, "%I64d", this->_senderId);
	xml = xml + buffer;
	xml = xml + "</_senderid>";
	xml = xml + "<_conferenceid>";
	_snprintf(buffer, BUFFERSIZE, "%I64d", this->_conferenceId);
	xml = xml + buffer;
	xml = xml + "</_conferenceid>";
	xml = xml + "<avCompressionCardChannelNumber>";
	_snprintf(buffer, BUFFERSIZE, "%I32d", this->avCompressionCardChannelNumber);
	xml = xml + buffer;
	xml = xml + "</avCompressionCardChannelNumber>";
	xml = xml + "<conId>";
	_snprintf(buffer, BUFFERSIZE, "%I64d", this->conId);
	xml = xml + buffer;
	xml = xml + "</conId>";
	xml = xml + "<roleId>";
	_snprintf(buffer, BUFFERSIZE, "%I64d", this->roleId);
	xml = xml + buffer;
	xml = xml + "</roleId>";
	xml = xml + "<userId>";
	_snprintf(buffer, BUFFERSIZE, "%I64d", this->userId);
	xml = xml + buffer;
	xml = xml + "</userId>";
	xml = xml + "<userName>";
	xml = xml + BaseMessage::encodeHtmlEscape(this->userName);
	xml = xml + "</userName>";
	xml = xml + "<firstName>";
	xml = xml + BaseMessage::encodeHtmlEscape(this->firstName);
	xml = xml + "</firstName>";
	xml = xml + "<lastName>";
	xml = xml + BaseMessage::encodeHtmlEscape(this->lastName);
	xml = xml + "</lastName>";
	xml = xml + "<email>";
	xml = xml + BaseMessage::encodeHtmlEscape(this->email);
	xml = xml + "</email>";
	xml = xml + "</lyvcmessage>";
	return xml;
}

bool LyvcMessage::UserJoinConference::fromXML(string& xmlString)
{
	string tagContent;
	
	tagContent = BaseMessage::getStringBetweenTag(xmlString, "_senderid");
	if(tagContent == ""){
		return false;
	}
	this->_senderId = _atoi64(tagContent.c_str());
	tagContent = BaseMessage::getStringBetweenTag(xmlString, "_conferenceid");
	if(tagContent == ""){
		return false;
	}
	this->_conferenceId = _atoi64(tagContent.c_str());
	tagContent = BaseMessage::getStringBetweenTag(xmlString, "avCompressionCardChannelNumber");
	if(tagContent == ""){
		return false;
	}
	this->avCompressionCardChannelNumber = atoi(tagContent.c_str());
	tagContent = BaseMessage::getStringBetweenTag(xmlString, "conId");
	if(tagContent == ""){
		return false;
	}
	this->conId = _atoi64(tagContent.c_str());
	tagContent = BaseMessage::getStringBetweenTag(xmlString, "roleId");
	if(tagContent == ""){
		return false;
	}
	this->roleId = _atoi64(tagContent.c_str());
	tagContent = BaseMessage::getStringBetweenTag(xmlString, "userId");
	if(tagContent == ""){
		return false;
	}
	this->userId = _atoi64(tagContent.c_str());
	this->userName = BaseMessage::decodeHtmlEscape(BaseMessage::getStringBetweenTag(xmlString, "userName"));
	this->firstName = BaseMessage::decodeHtmlEscape(BaseMessage::getStringBetweenTag(xmlString, "firstName"));
	this->lastName = BaseMessage::decodeHtmlEscape(BaseMessage::getStringBetweenTag(xmlString, "lastName"));
	this->email = BaseMessage::decodeHtmlEscape(BaseMessage::getStringBetweenTag(xmlString, "email"));
	return true;
}


