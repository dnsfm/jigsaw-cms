///////////////////////////////
// Message definition file
// Generated by lyvc Message
///////////////////////////////

#include "stdafx.h"
#include "ModifyConference.h"

string LyvcMessage::ModifyConference::toXML()
{
	const int BUFFERSIZE=64;
	char buffer[BUFFERSIZE];
	string xml;
	xml = xml + "<lyvcmessage>";
	xml = xml + "<id>";
	_snprintf(buffer, BUFFERSIZE, "%I32d", id);
	xml = xml + buffer;
	xml = xml + "</id>";
	xml = xml + "<_senderid>";
	_snprintf(buffer, BUFFERSIZE, "%I64d", this->_senderId);
	xml = xml + buffer;
	xml = xml + "</_senderid>";
	xml = xml + "<_conferenceid>";
	_snprintf(buffer, BUFFERSIZE, "%I64d", this->_conferenceId);
	xml = xml + buffer;
	xml = xml + "</_conferenceid>";
	xml = xml + "<startTime>";
	_snprintf(buffer, BUFFERSIZE, "%I64d", this->startTime*1000);
	xml = xml + buffer;
	xml = xml + "</startTime>";
	xml = xml + "<endTime>";
	_snprintf(buffer, BUFFERSIZE, "%I64d", this->endTime*1000);
	xml = xml + buffer;
	xml = xml + "</endTime>";
	xml = xml + "<conId>";
	_snprintf(buffer, BUFFERSIZE, "%I64d", this->conId);
	xml = xml + buffer;
	xml = xml + "</conId>";
	xml = xml + "<conModelId>";
	_snprintf(buffer, BUFFERSIZE, "%I64d", this->conModelId);
	xml = xml + buffer;
	xml = xml + "</conModelId>";
	xml = xml + "<conName>";
	xml = xml + BaseMessage::encodeHtmlEscape(this->conName);
	xml = xml + "</conName>";
	xml = xml + "<conDesc>";
	xml = xml + BaseMessage::encodeHtmlEscape(this->conDesc);
	xml = xml + "</conDesc>";
	xml = xml + "<conFileDesc>";
	xml = xml + BaseMessage::encodeHtmlEscape(this->conFileDesc);
	xml = xml + "</conFileDesc>";
	xml = xml + "<conFileURL>";
	xml = xml + BaseMessage::encodeHtmlEscape(this->conFileURL);
	xml = xml + "</conFileURL>";
	xml = xml + "</lyvcmessage>";
	return xml;
}

bool LyvcMessage::ModifyConference::fromXML(string& xmlString)
{
	string tagContent;
	
	tagContent = BaseMessage::getStringBetweenTag(xmlString, "_senderid");
	if(tagContent == ""){
		return false;
	}
	this->_senderId = _atoi64(tagContent.c_str());
	tagContent = BaseMessage::getStringBetweenTag(xmlString, "_conferenceid");
	if(tagContent == ""){
		return false;
	}
	this->_conferenceId = _atoi64(tagContent.c_str());
	tagContent = BaseMessage::getStringBetweenTag(xmlString, "startTime");
	if(tagContent == ""){
		return false;
	}
	this->startTime = _atoi64(tagContent.c_str())/1000;
	tagContent = BaseMessage::getStringBetweenTag(xmlString, "endTime");
	if(tagContent == ""){
		return false;
	}
	this->endTime = _atoi64(tagContent.c_str())/1000;
	tagContent = BaseMessage::getStringBetweenTag(xmlString, "conId");
	if(tagContent == ""){
		return false;
	}
	this->conId = _atoi64(tagContent.c_str());
	tagContent = BaseMessage::getStringBetweenTag(xmlString, "conModelId");
	if(tagContent == ""){
		return false;
	}
	this->conModelId = _atoi64(tagContent.c_str());
	this->conName = BaseMessage::decodeHtmlEscape(BaseMessage::getStringBetweenTag(xmlString, "conName"));
	this->conDesc = BaseMessage::decodeHtmlEscape(BaseMessage::getStringBetweenTag(xmlString, "conDesc"));
	this->conFileDesc = BaseMessage::decodeHtmlEscape(BaseMessage::getStringBetweenTag(xmlString, "conFileDesc"));
	this->conFileURL = BaseMessage::decodeHtmlEscape(BaseMessage::getStringBetweenTag(xmlString, "conFileURL"));
	return true;
}


