/* Generated by Together */

#ifndef COOPERATIONMANAGER_H
#define COOPERATIONMANAGER_H

#include<map>

//最多支持4路压缩卡
#define MAX_TKL_CHANNEL_NUM	4

struct TKLDataRecvThreadParam
{
	void* pObject;
	LONG lHandle;
};

/**
 * 整个客户端的数据模型
 */
class CooperationManager {

private:        

	// 当前视音频资源的潜在使用者
    typedef map<UINT, void*> AVCustomerMap;
    AVCustomerMap m_AVCustomerMap;

public:

    CooperationManager();
    ~CooperationManager();

	void create();
	void destroy();

	void addAVCustomer(UINT serverId, void* pObject);
	void removeAVCustomer(UINT serverId);

	// 开始捕捉视频
	BOOL startVideoCapture();

	// 停止捕捉视频
	void stopVideoCapture();

	// 开始捕捉音频
	void startAudioCapture();

	// 停止捕捉音频
	void stopAudioCapture();

private:
    // 采集声音数据的回调函数
    static void audioDataCallback(void* pObject, WAVEHDR* pWH);

    // 采集图像数据的回调函数
	static void videoDataCallback(void* pObject, LPVIDEOHDR lpVHdr);

	// 记录视频捕捉系统是否成功被初始化
	// 如果成功的话，调用相应的视频捕捉控制函数，
	// 如果不成功的话，忽略所有对于视频捕捉函数的调用。
	// 由于Direct Show不允许同时启动多个捕捉，因此添加此
	// 标记，以便在同一个计算机上启动多个本应用程序实例
	BOOL m_bVideoCaptureInitSuccess;

public:
	// 压缩卡采集数据后的接收对象
	void TKLAddCustomer(UINT serverId, void* pObject);
	void TKLRemoveCustomer(UINT serverId);

	// 开始视频压缩
	BOOL TKLStartVideoCapture(LONG lHandle);

	// 停止视频压缩
	void TKLStopVideoCapture(LONG lHandle);

	int getTKLChannelNumber();

	LONG getTKLHandle( int nIndex );

	UCHAR* getTKLHead(LONG lHandle);

private:
	// 初始化视频压缩卡
	void TKLInitCompressCard();
	// 释放压缩卡资源
	void TKLUninitCompressCard();

	// 视频压缩卡通道数
	int m_nTKLChannelNumber;
	// 视频压缩卡通道句柄
	LONG m_lTKLHandles[MAX_TKL_CHANNEL_NUM];
	// 视频压缩卡数据事件句柄
	HANDLE m_hTKLEvents[MAX_TKL_CHANNEL_NUM];
	// 视频压缩卡数据读取线程
	static UINT WINAPI TKLDataRecvProc(void* pObject);
	HANDLE m_hTKLDataRecvThreads[MAX_TKL_CHANNEL_NUM];
	UINT m_nTKLDataRecvThreadIds[MAX_TKL_CHANNEL_NUM];
	// 视频压缩卡初始化数据
	UCHAR* m_TKLHeads[MAX_TKL_CHANNEL_NUM];
	// 退出读取线程标志
	bool m_bTKLExit[MAX_TKL_CHANNEL_NUM];
	// 是否压缩标志
	int m_CompressCount[MAX_TKL_CHANNEL_NUM];

    AVCustomerMap m_TKLCustomerMap[MAX_TKL_CHANNEL_NUM];
	CRITICAL_SECTION m_csTKL;

};

#endif //COOPERATIONMANAGER_H
