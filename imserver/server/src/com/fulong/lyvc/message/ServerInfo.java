///////////////////////////////
// Message definition file
// Generated by lyvc Message
///////////////////////////////

package com.fulong.lyvc.message;

/**
 * ServerInfo
 * 
 * 龙驭视频会议系统 v3.0
 * 
 * 版权所有：北京中科辅龙计算机技术股份有限公司 2009
 * 
 * @author 李雄锋
 * 
 * 最后修改时间：2010-9-10
 */

public class ServerInfo extends BaseMessage{

	public static final int id = 188;

	public String DeleteConferenceURL;
	public String CreateConferenceNoticeURL;
	public String CreateBulletinURL;
	public String EditConferenceURL;
	public String CommonContactMgrURL;
	public String ConferenceModeMgrURL;
	public String SystemRoleMgrURL;
	public String CreateFormalConferenceURL;
	public String SelfInfoMgrURL;
	public String UserRegisterURL;
	public String ClientDownloadURL;
	public String domain;

	public String toXML() {
		StringBuffer xml = new StringBuffer();
		xml.append("<lyvcmessage>");
		xml.append("<id>" + id + "</id>");
		xml.append("<_senderid>" + this.getSenderId() + "</_senderid>");
		xml.append("<_conferenceid>" + this.getConferenceId() + "</_conferenceid>");
		xml.append("<domain>" + this.domain + "</domain>");
		xml.append("<DeleteConferenceURL>");
		if(this.DeleteConferenceURL != null) {
			xml.append(encodeHtmlEscape(this.DeleteConferenceURL));
		}
		xml.append("</DeleteConferenceURL>");
		xml.append("<CreateConferenceNoticeURL>");
		if(this.CreateConferenceNoticeURL != null) {
			xml.append(encodeHtmlEscape(this.CreateConferenceNoticeURL));
		}
		xml.append("</CreateConferenceNoticeURL>");
		xml.append("<CreateBulletinURL>");
		if(this.CreateBulletinURL != null) {
			xml.append(encodeHtmlEscape(this.CreateBulletinURL));
		}
		xml.append("</CreateBulletinURL>");
		xml.append("<EditConferenceURL>");
		if(this.EditConferenceURL != null) {
			xml.append(encodeHtmlEscape(this.EditConferenceURL));
		}
		xml.append("</EditConferenceURL>");
		xml.append("<CommonContactMgrURL>");
		if(this.CommonContactMgrURL != null) {
			xml.append(encodeHtmlEscape(this.CommonContactMgrURL));
		}
		xml.append("</CommonContactMgrURL>");
		xml.append("<ConferenceModeMgrURL>");
		if(this.ConferenceModeMgrURL != null) {
			xml.append(encodeHtmlEscape(this.ConferenceModeMgrURL));
		}
		xml.append("</ConferenceModeMgrURL>");
		xml.append("<SystemRoleMgrURL>");
		if(this.SystemRoleMgrURL != null) {
			xml.append(encodeHtmlEscape(this.SystemRoleMgrURL));
		}
		xml.append("</SystemRoleMgrURL>");
		xml.append("<CreateFormalConferenceURL>");
		if(this.CreateFormalConferenceURL != null) {
			xml.append(encodeHtmlEscape(this.CreateFormalConferenceURL));
		}
		xml.append("</CreateFormalConferenceURL>");
		xml.append("<SelfInfoMgrURL>");
		if(this.SelfInfoMgrURL != null) {
			xml.append(encodeHtmlEscape(this.SelfInfoMgrURL));
		}
		xml.append("</SelfInfoMgrURL>");
		xml.append("<UserRegisterURL>");
		if(this.UserRegisterURL != null) {
			xml.append(encodeHtmlEscape(this.UserRegisterURL));
		}
		xml.append("</UserRegisterURL>");
		xml.append("<ClientDownloadURL>");
		if(this.ClientDownloadURL != null) {
			xml.append(encodeHtmlEscape(this.ClientDownloadURL));
		}
		xml.append("</ClientDownloadURL>");
		xml.append("</lyvcmessage>");
		
		return xml.toString();
	}

	public void fromXML(String xmlString) throws MessageFormatException {
		String tagContent;
		
		tagContent = BaseMessage.getStringBetweenTag(xmlString, "_senderid");
		this.setSenderId(tagContent);
		tagContent = BaseMessage.getStringBetweenTag(xmlString, "_conferenceid");
		this.setConferenceId(tagContent);
		this.DeleteConferenceURL = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "DeleteConferenceURL"));
		this.CreateConferenceNoticeURL = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "CreateConferenceNoticeURL"));
		this.CreateBulletinURL = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "CreateBulletinURL"));
		this.EditConferenceURL = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "EditConferenceURL"));
		this.CommonContactMgrURL = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "CommonContactMgrURL"));
		this.ConferenceModeMgrURL = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "ConferenceModeMgrURL"));
		this.SystemRoleMgrURL = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "SystemRoleMgrURL"));
		this.CreateFormalConferenceURL = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "CreateFormalConferenceURL"));
		this.SelfInfoMgrURL = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "SelfInfoMgrURL"));
		this.UserRegisterURL = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "UserRegisterURL"));
		this.ClientDownloadURL = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "ClientDownloadURL"));
		this.domain = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "domain"));;

	}

}
