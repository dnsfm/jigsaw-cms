///////////////////////////////
// Message definition file
// Generated by lyvc Message
///////////////////////////////

package com.fulong.lyvc.message;

/**
 * RegisterUser
 * 
 * 龙驭视频会议系统 v3.0
 * 
 * 版权所有：北京中科辅龙计算机技术股份有限公司 2009
 * 
 * @author 李雄锋
 * 
 * 最后修改时间：2010-9-10
 */

public class RegisterUser extends BaseMessage{

	public static final int id = 194;

	public String userName;
	public String password;
	public String lastName;
	public String firstName;
	public String email;
	public String domain;

	public String toXML() {
		StringBuffer xml = new StringBuffer();
		xml.append("<lyvcmessage>");
		xml.append("<id>" + id + "</id>");
		xml.append("<_senderid>" + this.getSenderId() + "</_senderid>");
		xml.append("<_conferenceid>" + this.getConferenceId() + "</_conferenceid>");
		xml.append("<userName>");
		if(this.userName != null) {
			xml.append(encodeHtmlEscape(this.userName));
		}
		xml.append("</userName>");
		xml.append("<password>");
		if(this.password != null) {
			xml.append(encodeHtmlEscape(this.password));
		}
		xml.append("</password>");
		xml.append("<lastName>");
		if(this.lastName != null) {
			xml.append(encodeHtmlEscape(this.lastName));
		}
		xml.append("</lastName>");
		xml.append("<firstName>");
		if(this.firstName != null) {
			xml.append(encodeHtmlEscape(this.firstName));
		}
		xml.append("</firstName>");
		xml.append("<email>");
		if(this.email != null) {
			xml.append(encodeHtmlEscape(this.email));
		}
		xml.append("</email>");
		xml.append("<email>");
		if(this.domain != null) {
			xml.append(encodeHtmlEscape(this.domain));
		}
		xml.append("</domain>");
		xml.append("</lyvcmessage>");
		
		return xml.toString();
	}

	public void fromXML(String xmlString) throws MessageFormatException {
		String tagContent;
		
		tagContent = BaseMessage.getStringBetweenTag(xmlString, "_senderid");
		this.setSenderId(tagContent);
		tagContent = BaseMessage.getStringBetweenTag(xmlString, "_conferenceid");
		this.setConferenceId(tagContent);
		this.userName = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "userName"));
		this.password = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "password"));
		this.lastName = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "lastName"));
		this.firstName = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "firstName"));
		this.email = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "email"));
		this.domain = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "domain"));
	}

}
