///////////////////////////////
// Message definition file
// Generated by lyvc Message
///////////////////////////////

package com.fulong.lyvc.message;

/**
 * SendFileData
 * 
 * 龙驭视频会议系统 v3.0
 * 
 * 版权所有：北京中科辅龙计算机技术股份有限公司 2009
 * 
 * @author 李雄锋
 * 
 * 最后修改时间：2010-9-10
 */

public class SendFileData extends BaseMessage{

	public static final int id = 165;

	public boolean isFirstSend;
	public boolean isFinished;
	public int dataLength;
	public int compressedLength;
	public String receiverId;
	public String fullFileName;
	public String fileData;

	public String toXML() {
		StringBuffer xml = new StringBuffer();
		xml.append("<lyvcmessage>");
		xml.append("<id>" + id + "</id>");
		xml.append("<_senderid>" + this.getSenderId() + "</_senderid>");
		xml.append("<_conferenceid>" + this.getConferenceId() + "</_conferenceid>");
		xml.append("<isFirstSend>");
		if( this.isFirstSend){
			xml.append(1);
		} else {
			xml.append(0);
		}
		xml.append("</isFirstSend>");
		xml.append("<isFinished>");
		if( this.isFinished){
			xml.append(1);
		} else {
			xml.append(0);
		}
		xml.append("</isFinished>");
		xml.append("<dataLength>" + this.dataLength + "</dataLength>");
		xml.append("<compressedLength>" + this.compressedLength + "</compressedLength>");
		xml.append("<receiverId>" + this.receiverId + "</receiverId>");
		xml.append("<fullFileName>");
		if(this.fullFileName != null) {
			xml.append(encodeHtmlEscape(this.fullFileName));
		}
		xml.append("</fullFileName>");
		xml.append("<fileData>");
		if(this.fileData != null) {
			xml.append(encodeHtmlEscape(this.fileData));
		}
		xml.append("</fileData>");
		xml.append("</lyvcmessage>");
		
		return xml.toString();
	}

	public void fromXML(String xmlString) throws MessageFormatException {
		String tagContent;
		
		tagContent = BaseMessage.getStringBetweenTag(xmlString, "_senderid");
		this.setSenderId(tagContent);
		tagContent = BaseMessage.getStringBetweenTag(xmlString, "_conferenceid");
		this.setConferenceId(tagContent);
		tagContent = BaseMessage.getStringBetweenTag(xmlString, "isFirstSend");
		
		if( tagContent.equals("0")) {
			this.isFirstSend = false;
		} else {
			this.isFirstSend = true;
		}
		
		tagContent = BaseMessage.getStringBetweenTag(xmlString, "isFinished");
		if( tagContent.equals("0")) {
			this.isFinished = false;
		} else {
			this.isFinished = true;
		}
		
		tagContent = BaseMessage.getStringBetweenTag(xmlString, "dataLength");
		this.dataLength = Integer.parseInt(tagContent);
		tagContent = BaseMessage.getStringBetweenTag(xmlString, "compressedLength");
		this.compressedLength = Integer.parseInt(tagContent);
		tagContent = BaseMessage.getStringBetweenTag(xmlString, "receiverId");
		this.receiverId = tagContent;
		this.fullFileName = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "fullFileName"));
		this.fileData = BaseMessage.decodeHtmlEscape(BaseMessage.getStringBetweenTag(xmlString, "fileData"));
	}

}
