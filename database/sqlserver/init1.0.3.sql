-- =============================================
-- Export file for COOLINKCLEAN_NEW
-- Create date: 2010-8-9, 14:00:00
-- =============================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[D_EXPIRY_DATE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[D_EXPIRY_DATE](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [datetime] NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_D_EXPIRY_DATE_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_D_EXPIRY_DATE_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[D_EXPIRY_DATE]') AND name = N'D_EXPIRY_DATE_NODE_ID')
CREATE NONCLUSTERED INDEX [D_EXPIRY_DATE_NODE_ID] ON [dbo].[D_EXPIRY_DATE] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[D_EXPIRY_DATE]') AND name = N'D_EXPIRY_DATE_VALUE')
CREATE NONCLUSTERED INDEX [D_EXPIRY_DATE_VALUE] ON [dbo].[D_EXPIRY_DATE] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[D_EXPIRY_DATE]') AND name = N'D_EXPIRY_DATE_VINDEX')
CREATE NONCLUSTERED INDEX [D_EXPIRY_DATE_VINDEX] ON [dbo].[D_EXPIRY_DATE] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[D_LASTLOGINDATE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[D_LASTLOGINDATE](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [datetime] NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_D_LASTLOGINDATE_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_D_LASTLOGINDATE_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[D_LASTLOGINDATE]') AND name = N'D_LASTLOGINDATE_NODE_ID')
CREATE NONCLUSTERED INDEX [D_LASTLOGINDATE_NODE_ID] ON [dbo].[D_LASTLOGINDATE] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[D_LASTLOGINDATE]') AND name = N'D_LASTLOGINDATE_VALUE')
CREATE NONCLUSTERED INDEX [D_LASTLOGINDATE_VALUE] ON [dbo].[D_LASTLOGINDATE] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[D_LASTLOGINDATE]') AND name = N'D_LASTLOGINDATE_VINDEX')
CREATE NONCLUSTERED INDEX [D_LASTLOGINDATE_VINDEX] ON [dbo].[D_LASTLOGINDATE] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[D_LASTMODIFIEDDATE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[D_LASTMODIFIEDDATE](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [datetime] NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_D_LASTMODIFIEDDATE_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_D_LASTMODIFIEDDATE_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[D_LASTMODIFIEDDATE]') AND name = N'D_LASTMODIFIEDDATE_NODE_ID')
CREATE NONCLUSTERED INDEX [D_LASTMODIFIEDDATE_NODE_ID] ON [dbo].[D_LASTMODIFIEDDATE] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[D_LASTMODIFIEDDATE]') AND name = N'D_LASTMODIFIEDDATE_VALUE')
CREATE NONCLUSTERED INDEX [D_LASTMODIFIEDDATE_VALUE] ON [dbo].[D_LASTMODIFIEDDATE] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[D_LASTMODIFIEDDATE]') AND name = N'D_LASTMODIFIEDDATE_VINDEX')
CREATE NONCLUSTERED INDEX [D_LASTMODIFIEDDATE_VINDEX] ON [dbo].[D_LASTMODIFIEDDATE] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[R_MEMBER]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[R_MEMBER](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](128) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_R_MEMBER_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_R_MEMBER_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[R_MEMBER]') AND name = N'R_MEMBER_NODE_ID')
CREATE NONCLUSTERED INDEX [R_MEMBER_NODE_ID] ON [dbo].[R_MEMBER] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[R_MEMBER]') AND name = N'R_MEMBER_VALUE')
CREATE NONCLUSTERED INDEX [R_MEMBER_VALUE] ON [dbo].[R_MEMBER] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[R_MEMBER]') AND name = N'R_MEMBER_VINDEX')
CREATE NONCLUSTERED INDEX [R_MEMBER_VINDEX] ON [dbo].[R_MEMBER] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[R_MODIFIER]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[R_MODIFIER](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](128) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_R_MODIFIER_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_R_MODIFIER_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[R_MODIFIER]') AND name = N'R_MODIFIER_NODE_ID')
CREATE NONCLUSTERED INDEX [R_MODIFIER_NODE_ID] ON [dbo].[R_MODIFIER] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[R_MODIFIER]') AND name = N'R_MODIFIER_VALUE')
CREATE NONCLUSTERED INDEX [R_MODIFIER_VALUE] ON [dbo].[R_MODIFIER] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[R_MODIFIER]') AND name = N'R_MODIFIER_VINDEX')
CREATE NONCLUSTERED INDEX [R_MODIFIER_VINDEX] ON [dbo].[R_MODIFIER] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ACCOUNT]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[ACCOUNT](
	[PKID] [varchar](128) NOT NULL,
	[COMMONNAME] [varchar](512) NULL,
	[POINTS] [numeric](38, 0) NOT NULL CONSTRAINT [DF_ACCOUNT_POINTS]  DEFAULT ((0)),
	[OWNER_ID] [varchar](128) NULL,
	[TYPE] [numeric](38, 0) NOT NULL CONSTRAINT [DF_ACCOUNT_TYPE]  DEFAULT ((1)),
	[TRADABLE] [char](1) NOT NULL CONSTRAINT [DF_ACCOUNT_TRADABLE]  DEFAULT ((0)),
	[PAYABLE] [char](1) NOT NULL CONSTRAINT [DF_ACCOUNT_PAYABLE]  DEFAULT ((0)),
	[CREATION_DATE] [datetime] NOT NULL,
	[VALIDATION_DATE] [datetime] NULL,
 CONSTRAINT [ACCOUNT_PKID] PRIMARY KEY CLUSTERED 
(
	[PKID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ACCOUNT]') AND name = N'ACCOUNT_COMMONNAME')
CREATE NONCLUSTERED INDEX [ACCOUNT_COMMONNAME] ON [dbo].[ACCOUNT] 
(
	[COMMONNAME] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ACCOUNT]') AND name = N'ACCOUNT_OWNER_ID')
CREATE NONCLUSTERED INDEX [ACCOUNT_OWNER_ID] ON [dbo].[ACCOUNT] 
(
	[OWNER_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'主键' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'ACCOUNT', @level2type=N'COLUMN', @level2name=N'PKID'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'可显示名称' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'ACCOUNT', @level2type=N'COLUMN', @level2name=N'COMMONNAME'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'积分，积分总值' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'ACCOUNT', @level2type=N'COLUMN', @level2name=N'POINTS'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'所有者，机构或者用户的ID' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'ACCOUNT', @level2type=N'COLUMN', @level2name=N'OWNER_ID'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'类型，1交易账户；2普通卡，3银卡，4金卡，5钻石卡' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'ACCOUNT', @level2type=N'COLUMN', @level2name=N'TYPE'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'可交易,0：不可交易；1：可交易' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'ACCOUNT', @level2type=N'COLUMN', @level2name=N'TRADABLE'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'可支付,0：不可支付；1：可支付' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'ACCOUNT', @level2type=N'COLUMN', @level2name=N'PAYABLE'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'创建日期' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'ACCOUNT', @level2type=N'COLUMN', @level2name=N'CREATION_DATE'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'验证日期' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'ACCOUNT', @level2type=N'COLUMN', @level2name=N'VALIDATION_DATE'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PROP156]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_PROP156](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_PROP156_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_PROP156_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_PROP156]') AND name = N'S_PROP156_NODE_ID')
CREATE NONCLUSTERED INDEX [S_PROP156_NODE_ID] ON [dbo].[S_PROP156] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_PROP156]') AND name = N'S_PROP156_VALUE')
CREATE NONCLUSTERED INDEX [S_PROP156_VALUE] ON [dbo].[S_PROP156] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_PROP156]') AND name = N'S_PROP156_VINDEX')
CREATE NONCLUSTERED INDEX [S_PROP156_VINDEX] ON [dbo].[S_PROP156] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[R_PROP31]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[R_PROP31](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](128) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_R_PROP31_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_R_PROP31_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[R_PROP31]') AND name = N'R_PROP31_NODE_ID')
CREATE NONCLUSTERED INDEX [R_PROP31_NODE_ID] ON [dbo].[R_PROP31] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[R_PROP31]') AND name = N'R_PROP31_VALUE')
CREATE NONCLUSTERED INDEX [R_PROP31_VALUE] ON [dbo].[R_PROP31] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[R_PROP31]') AND name = N'R_PROP31_VINDEX')
CREATE NONCLUSTERED INDEX [R_PROP31_VINDEX] ON [dbo].[R_PROP31] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[D_UPDATETIME]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[D_UPDATETIME](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [datetime] NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_D_UPDATETIME_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_D_UPDATETIME_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[D_UPDATETIME]') AND name = N'D_UPDATETIME_NODE_ID')
CREATE NONCLUSTERED INDEX [D_UPDATETIME_NODE_ID] ON [dbo].[D_UPDATETIME] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[D_UPDATETIME]') AND name = N'D_UPDATETIME_VALUE')
CREATE NONCLUSTERED INDEX [D_UPDATETIME_VALUE] ON [dbo].[D_UPDATETIME] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[D_UPDATETIME]') AND name = N'D_UPDATETIME_VINDEX')
CREATE NONCLUSTERED INDEX [D_UPDATETIME_VINDEX] ON [dbo].[D_UPDATETIME] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PROP531]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_PROP531](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_PROP531_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_PROP531_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_PROP531]') AND name = N'S_PROP531_NODE_ID')
CREATE NONCLUSTERED INDEX [S_PROP531_NODE_ID] ON [dbo].[S_PROP531] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_PROP531]') AND name = N'S_PROP531_VALUE')
CREATE NONCLUSTERED INDEX [S_PROP531_VALUE] ON [dbo].[S_PROP531] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_PROP531]') AND name = N'S_PROP531_VINDEX')
CREATE NONCLUSTERED INDEX [S_PROP531_VINDEX] ON [dbo].[S_PROP531] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PROP93]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_PROP93](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_PROP93_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_PROP93_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_PROP93]') AND name = N'S_PROP93_NODE_ID')
CREATE NONCLUSTERED INDEX [S_PROP93_NODE_ID] ON [dbo].[S_PROP93] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_PROP93]') AND name = N'S_PROP93_VALUE')
CREATE NONCLUSTERED INDEX [S_PROP93_VALUE] ON [dbo].[S_PROP93] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_PROP93]') AND name = N'S_PROP93_VINDEX')
CREATE NONCLUSTERED INDEX [S_PROP93_VINDEX] ON [dbo].[S_PROP93] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_QUANTITY_DESC]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_QUANTITY_DESC](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_QUANTITY_DESC_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_QUANTITY_DESC_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_QUANTITY_DESC]') AND name = N'S_QUANTITY_DESC_NODE_ID')
CREATE NONCLUSTERED INDEX [S_QUANTITY_DESC_NODE_ID] ON [dbo].[S_QUANTITY_DESC] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_QUANTITY_DESC]') AND name = N'S_QUANTITY_DESC_VALUE')
CREATE NONCLUSTERED INDEX [S_QUANTITY_DESC_VALUE] ON [dbo].[S_QUANTITY_DESC] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_QUANTITY_DESC]') AND name = N'S_QUANTITY_DESC_VINDEX')
CREATE NONCLUSTERED INDEX [S_QUANTITY_DESC_VINDEX] ON [dbo].[S_QUANTITY_DESC] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_SPECIFICATION_DESC]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_SPECIFICATION_DESC](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_SPECIFICATION_DESC_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_SPECIFICATION_DESC_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_SPECIFICATION_DESC]') AND name = N'S_SPECIFICATION_DESC_NODE_ID')
CREATE NONCLUSTERED INDEX [S_SPECIFICATION_DESC_NODE_ID] ON [dbo].[S_SPECIFICATION_DESC] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_SPECIFICATION_DESC]') AND name = N'S_SPECIFICATION_DESC_VALUE')
CREATE NONCLUSTERED INDEX [S_SPECIFICATION_DESC_VALUE] ON [dbo].[S_SPECIFICATION_DESC] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_SPECIFICATION_DESC]') AND name = N'S_SPECIFICATION_DESC_VINDEX')
CREATE NONCLUSTERED INDEX [S_SPECIFICATION_DESC_VINDEX] ON [dbo].[S_SPECIFICATION_DESC] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_TITLE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_TITLE](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_TITLE_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_TITLE_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_TITLE]') AND name = N'S_TITLE_NODE_ID')
CREATE NONCLUSTERED INDEX [S_TITLE_NODE_ID] ON [dbo].[S_TITLE] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_TITLE]') AND name = N'S_TITLE_VALUE')
CREATE NONCLUSTERED INDEX [S_TITLE_VALUE] ON [dbo].[S_TITLE] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_TITLE]') AND name = N'S_TITLE_VINDEX')
CREATE NONCLUSTERED INDEX [S_TITLE_VINDEX] ON [dbo].[S_TITLE] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[REALTIME_COUNT]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[REALTIME_COUNT](
	[SUMVALUE] [numeric](38, 0) NOT NULL CONSTRAINT [DF_REALTIME_COUNT_SUMVALUE]  DEFAULT ((1)),
	[NAME] [varchar](128) NOT NULL,
	[ACCESS_TIME] [datetime] NOT NULL
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[REALTIME_COUNT]') AND name = N'REALTIME_ACCESS_TIME')
CREATE NONCLUSTERED INDEX [REALTIME_ACCESS_TIME] ON [dbo].[REALTIME_COUNT] 
(
	[ACCESS_TIME] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[REALTIME_COUNT]') AND name = N'REALTIME_NAME')
CREATE NONCLUSTERED INDEX [REALTIME_NAME] ON [dbo].[REALTIME_COUNT] 
(
	[NAME] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[REALTIME_COUNT]') AND name = N'REALTIME_SUMVALUE')
CREATE NONCLUSTERED INDEX [REALTIME_SUMVALUE] ON [dbo].[REALTIME_COUNT] 
(
	[SUMVALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'计数值，保留字段，暂定为1' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'REALTIME_COUNT', @level2type=N'COLUMN', @level2name=N'SUMVALUE'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'可以是系统名称，也可以是对象的ID' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'REALTIME_COUNT', @level2type=N'COLUMN', @level2name=N'NAME'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'点击发生时间' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'REALTIME_COUNT', @level2type=N'COLUMN', @level2name=N'ACCESS_TIME'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_USER_COMMONNAME]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_USER_COMMONNAME](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_USER_COMMONNAME_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_USER_COMMONNAME_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_USER_COMMONNAME]') AND name = N'S_USER_COMMONNAME_NODE_ID')
CREATE NONCLUSTERED INDEX [S_USER_COMMONNAME_NODE_ID] ON [dbo].[S_USER_COMMONNAME] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_USER_COMMONNAME]') AND name = N'S_USER_COMMONNAME_VALUE')
CREATE NONCLUSTERED INDEX [S_USER_COMMONNAME_VALUE] ON [dbo].[S_USER_COMMONNAME] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_USER_COMMONNAME]') AND name = N'S_USER_COMMONNAME_VINDEX')
CREATE NONCLUSTERED INDEX [S_USER_COMMONNAME_VINDEX] ON [dbo].[S_USER_COMMONNAME] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_USER_PASSWORD]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_USER_PASSWORD](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_USER_PASSWORD_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_USER_PASSWORD_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_USER_PASSWORD]') AND name = N'S_USER_PASSWORD_NODE_ID')
CREATE NONCLUSTERED INDEX [S_USER_PASSWORD_NODE_ID] ON [dbo].[S_USER_PASSWORD] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_USER_PASSWORD]') AND name = N'S_USER_PASSWORD_VALUE')
CREATE NONCLUSTERED INDEX [S_USER_PASSWORD_VALUE] ON [dbo].[S_USER_PASSWORD] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_USER_PASSWORD]') AND name = N'S_USER_PASSWORD_VINDEX')
CREATE NONCLUSTERED INDEX [S_USER_PASSWORD_VINDEX] ON [dbo].[S_USER_PASSWORD] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_USER_USERNAME]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_USER_USERNAME](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_USER_USERNAME_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_USER_USERNAME_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_USER_USERNAME]') AND name = N'S_USER_USERNAME_NODE_ID')
CREATE NONCLUSTERED INDEX [S_USER_USERNAME_NODE_ID] ON [dbo].[S_USER_USERNAME] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_USER_USERNAME]') AND name = N'S_USER_USERNAME_VALUE')
CREATE NONCLUSTERED INDEX [S_USER_USERNAME_VALUE] ON [dbo].[S_USER_USERNAME] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_USER_USERNAME]') AND name = N'S_USER_USERNAME_VINDEX')
CREATE NONCLUSTERED INDEX [S_USER_USERNAME_VINDEX] ON [dbo].[S_USER_USERNAME] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[L_LENGTH]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[L_LENGTH](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [numeric](38, 0) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_L_LENGTH_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_L_LENGTH_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[L_LENGTH]') AND name = N'L_LENGTH_NODE_ID')
CREATE NONCLUSTERED INDEX [L_LENGTH_NODE_ID] ON [dbo].[L_LENGTH] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[L_LENGTH]') AND name = N'L_LENGTH_VALUE')
CREATE NONCLUSTERED INDEX [L_LENGTH_VALUE] ON [dbo].[L_LENGTH] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[L_LENGTH]') AND name = N'L_LENGTH_VINDEX')
CREATE NONCLUSTERED INDEX [L_LENGTH_VINDEX] ON [dbo].[L_LENGTH] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TOTALLY_COUNT]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TOTALLY_COUNT](
	[SUMVALUE] [numeric](38, 0) NOT NULL CONSTRAINT [DF_TOTALLY_COUNT_SUMVALUE]  DEFAULT ((1)),
	[NAME] [varchar](128) NOT NULL,
 CONSTRAINT [TOTALLY_PK] UNIQUE CLUSTERED 
(
	[SUMVALUE] ASC,
	[NAME] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TOTALLY_COUNT]') AND name = N'TOTALLY_NAME')
CREATE NONCLUSTERED INDEX [TOTALLY_NAME] ON [dbo].[TOTALLY_COUNT] 
(
	[NAME] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TOTALLY_COUNT]') AND name = N'TOTALLY_SUMVALUE')
CREATE NONCLUSTERED INDEX [TOTALLY_SUMVALUE] ON [dbo].[TOTALLY_COUNT] 
(
	[SUMVALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'计数值' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'TOTALLY_COUNT', @level2type=N'COLUMN', @level2name=N'SUMVALUE'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'可以是系统名称，也可以是对象的ID' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'TOTALLY_COUNT', @level2type=N'COLUMN', @level2name=N'NAME'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[WEEKLY_COUNT]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[WEEKLY_COUNT](
	[SUMVALUE] [numeric](38, 0) NOT NULL CONSTRAINT [DF_WEEKLY_COUNT_SUMVALUE]  DEFAULT ((1)),
	[NAME] [varchar](128) NOT NULL,
	[ACCESS_WEEK] [numeric](38, 0) NOT NULL,
	[ACCESS_YEAR] [numeric](38, 0) NOT NULL
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[WEEKLY_COUNT]') AND name = N'I_WEEKLY_ACCESS_WEEK')
CREATE NONCLUSTERED INDEX [I_WEEKLY_ACCESS_WEEK] ON [dbo].[WEEKLY_COUNT] 
(
	[ACCESS_WEEK] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[WEEKLY_COUNT]') AND name = N'I_WEEKLY_ACCESS_YEAR')
CREATE NONCLUSTERED INDEX [I_WEEKLY_ACCESS_YEAR] ON [dbo].[WEEKLY_COUNT] 
(
	[ACCESS_YEAR] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[WEEKLY_COUNT]') AND name = N'I_WEEKLY_NAME')
CREATE NONCLUSTERED INDEX [I_WEEKLY_NAME] ON [dbo].[WEEKLY_COUNT] 
(
	[NAME] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[WEEKLY_COUNT]') AND name = N'I_WEEKLY_SUMVALUE')
CREATE NONCLUSTERED INDEX [I_WEEKLY_SUMVALUE] ON [dbo].[WEEKLY_COUNT] 
(
	[SUMVALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'计数值' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'WEEKLY_COUNT', @level2type=N'COLUMN', @level2name=N'SUMVALUE'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'可以是系统名称，也可以是对象的ID' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'WEEKLY_COUNT', @level2type=N'COLUMN', @level2name=N'NAME'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'以年计算的周' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'WEEKLY_COUNT', @level2type=N'COLUMN', @level2name=N'ACCESS_WEEK'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'年份' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'WEEKLY_COUNT', @level2type=N'COLUMN', @level2name=N'ACCESS_YEAR'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[YEARLY_COUNT]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[YEARLY_COUNT](
	[SUMVALUE] [numeric](38, 0) NOT NULL CONSTRAINT [DF_YEARLY_COUNT_SUMVALUE]  DEFAULT ((1)),
	[NAME] [varchar](128) NOT NULL,
	[ACCESS_YEAR] [numeric](38, 0) NOT NULL
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[YEARLY_COUNT]') AND name = N'I_YEARLY_ACCESS_YEAR')
CREATE NONCLUSTERED INDEX [I_YEARLY_ACCESS_YEAR] ON [dbo].[YEARLY_COUNT] 
(
	[ACCESS_YEAR] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[YEARLY_COUNT]') AND name = N'I_YEARLY_NAME')
CREATE NONCLUSTERED INDEX [I_YEARLY_NAME] ON [dbo].[YEARLY_COUNT] 
(
	[NAME] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[YEARLY_COUNT]') AND name = N'I_YEARLY_SUMVALUE')
CREATE NONCLUSTERED INDEX [I_YEARLY_SUMVALUE] ON [dbo].[YEARLY_COUNT] 
(
	[SUMVALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'计数值' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'YEARLY_COUNT', @level2type=N'COLUMN', @level2name=N'SUMVALUE'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'可以是系统名称，也可以是对象的ID' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'YEARLY_COUNT', @level2type=N'COLUMN', @level2name=N'NAME'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'年份' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'YEARLY_COUNT', @level2type=N'COLUMN', @level2name=N'ACCESS_YEAR'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[I_RESOURCE_CONTENT]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[I_RESOURCE_CONTENT](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varbinary](max) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_I_RESOURCE_CONTENT_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_I_RESOURCE_CONTENT_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[I_RESOURCE_CONTENT]') AND name = N'I_RESOURCE_CONTENT_NODE_ID')
CREATE NONCLUSTERED INDEX [I_RESOURCE_CONTENT_NODE_ID] ON [dbo].[I_RESOURCE_CONTENT] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[I_RESOURCE_CONTENT]') AND name = N'I_RESOURCE_CONTENT_VINDEX')
CREATE NONCLUSTERED INDEX [I_RESOURCE_CONTENT_VINDEX] ON [dbo].[I_RESOURCE_CONTENT] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[T_DESCRIPTION]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[T_DESCRIPTION](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](max) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_T_DESCRIPTION_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_T_DESCRIPTION_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[T_DESCRIPTION]') AND name = N'T_DESCRIPTION_NODE_ID')
CREATE NONCLUSTERED INDEX [T_DESCRIPTION_NODE_ID] ON [dbo].[T_DESCRIPTION] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[T_DESCRIPTION]') AND name = N'T_DESCRIPTION_VINDEX')
CREATE NONCLUSTERED INDEX [T_DESCRIPTION_VINDEX] ON [dbo].[T_DESCRIPTION] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MONTHLY_COUNT]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MONTHLY_COUNT](
	[SUMVALUE] [numeric](38, 0) NOT NULL CONSTRAINT [DF_MONTHLY_COUNT_SUMVALUE]  DEFAULT ((1)),
	[NAME] [varchar](128) NOT NULL,
	[ACCESS_MONTH] [numeric](38, 0) NOT NULL,
	[ACCESS_YEAR] [numeric](38, 0) NOT NULL
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MONTHLY_COUNT]') AND name = N'I_MONTHLY_ACCESS_MONTH')
CREATE NONCLUSTERED INDEX [I_MONTHLY_ACCESS_MONTH] ON [dbo].[MONTHLY_COUNT] 
(
	[ACCESS_MONTH] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MONTHLY_COUNT]') AND name = N'I_MONTHLY_ACCESS_YEAR')
CREATE NONCLUSTERED INDEX [I_MONTHLY_ACCESS_YEAR] ON [dbo].[MONTHLY_COUNT] 
(
	[ACCESS_YEAR] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MONTHLY_COUNT]') AND name = N'I_MONTHLY_NAME')
CREATE NONCLUSTERED INDEX [I_MONTHLY_NAME] ON [dbo].[MONTHLY_COUNT] 
(
	[NAME] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MONTHLY_COUNT]') AND name = N'I_MONTHLY_SUMVALUE')
CREATE NONCLUSTERED INDEX [I_MONTHLY_SUMVALUE] ON [dbo].[MONTHLY_COUNT] 
(
	[SUMVALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'计数值' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'MONTHLY_COUNT', @level2type=N'COLUMN', @level2name=N'SUMVALUE'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'可以是系统名称，也可以是对象的ID' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'MONTHLY_COUNT', @level2type=N'COLUMN', @level2name=N'NAME'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'月份' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'MONTHLY_COUNT', @level2type=N'COLUMN', @level2name=N'ACCESS_MONTH'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'年份' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'MONTHLY_COUNT', @level2type=N'COLUMN', @level2name=N'ACCESS_YEAR'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[NODE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[NODE](
	[PKID] [varchar](128) NOT NULL,
	[PARENT_ID] [varchar](128) NOT NULL,
	[NAME] [varchar](128) NULL,
	[ORDERNO] [numeric](38, 0) NULL,
	[STRING_INDEX] [varchar](1) NULL,
	[CLOB_INDEX] [varchar](1) NULL,
 CONSTRAINT [PKID_NODE] PRIMARY KEY CLUSTERED 
(
	[PKID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[NODE]') AND name = N'NODE_NAME')
CREATE NONCLUSTERED INDEX [NODE_NAME] ON [dbo].[NODE] 
(
	[NAME] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[NODE]') AND name = N'NODE_ORDERNO')
CREATE NONCLUSTERED INDEX [NODE_ORDERNO] ON [dbo].[NODE] 
(
	[ORDERNO] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[NODE]') AND name = N'NODE_PARENT_ID')
CREATE NONCLUSTERED INDEX [NODE_PARENT_ID] ON [dbo].[NODE] 
(
	[PARENT_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'本表PKID' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'NODE', @level2type=N'COLUMN', @level2name=N'PARENT_ID'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'子节点标识' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'NODE', @level2type=N'COLUMN', @level2name=N'NAME'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'子节点序号' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'NODE', @level2type=N'COLUMN', @level2name=N'ORDERNO'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'用于内容标题全文检索' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'NODE', @level2type=N'COLUMN', @level2name=N'STRING_INDEX'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'用于内容全文检索' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'NODE', @level2type=N'COLUMN', @level2name=N'CLOB_INDEX'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[NODE_DEFINITION]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[NODE_DEFINITION](
	[PKID] [varchar](128) NOT NULL,
	[DELETE_MARK] [char](1) NOT NULL CONSTRAINT [DF_NODE_DEFINITION_DELETE_MARK]  DEFAULT ((0)),
	[DESCRIPTION] [varchar](512) NULL,
	[IS_SYSTEM] [char](1) NOT NULL CONSTRAINT [DF_NODE_DEFINITION_IS_SYSTEM]  DEFAULT ('0'),
	[SUPER_ID] [varchar](128) NULL,
	[CREATE_TIME] [datetime] NOT NULL CONSTRAINT [DF_NODE_DEFINITION_CREATE_TIME]  DEFAULT (CONVERT([varchar],getdate(),(20))),
	[NAME] [varchar](512) NULL,
 CONSTRAINT [PKID] PRIMARY KEY CLUSTERED 
(
	[PKID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[NODE_DEFINITION]') AND name = N'NODE_DEFINITION_DELETE_MARK')
CREATE NONCLUSTERED INDEX [NODE_DEFINITION_DELETE_MARK] ON [dbo].[NODE_DEFINITION] 
(
	[DELETE_MARK] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[NODE_DEFINITION]') AND name = N'NODE_DEFINITION_SUPERID')
CREATE NONCLUSTERED INDEX [NODE_DEFINITION_SUPERID] ON [dbo].[NODE_DEFINITION] 
(
	[SUPER_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[NODE_DEFINITION]') AND name = N'NODE_DEFINITION_SYSTEM')
CREATE NONCLUSTERED INDEX [NODE_DEFINITION_SYSTEM] ON [dbo].[NODE_DEFINITION] 
(
	[IS_SYSTEM] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'由系统生成，不使用数据库提供的自动产生的主键' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'NODE_DEFINITION', @level2type=N'COLUMN', @level2name=N'PKID'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0:正常，1：已删除' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'NODE_DEFINITION', @level2type=N'COLUMN', @level2name=N'DELETE_MARK'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'描述' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'NODE_DEFINITION', @level2type=N'COLUMN', @level2name=N'DESCRIPTION'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'是否是系统大纲 0不是 1是' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'NODE_DEFINITION', @level2type=N'COLUMN', @level2name=N'IS_SYSTEM'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'（类别）名称' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'NODE_DEFINITION', @level2type=N'COLUMN', @level2name=N'NAME'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DISPLAYNAME]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_DISPLAYNAME](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_DISPLAYNAME_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_DISPLAYNAME_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_DISPLAYNAME]') AND name = N'S_DISPLAYNAME_NODE_ID')
CREATE NONCLUSTERED INDEX [S_DISPLAYNAME_NODE_ID] ON [dbo].[S_DISPLAYNAME] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_DISPLAYNAME]') AND name = N'S_DISPLAYNAME_VALUE')
CREATE NONCLUSTERED INDEX [S_DISPLAYNAME_VALUE] ON [dbo].[S_DISPLAYNAME] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_DISPLAYNAME]') AND name = N'S_DISPLAYNAME_VINDEX')
CREATE NONCLUSTERED INDEX [S_DISPLAYNAME_VINDEX] ON [dbo].[S_DISPLAYNAME] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DOMAIN]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_DOMAIN](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_DOMAIN_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_DOMAIN_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_DOMAIN]') AND name = N'S_DOMAIN_NODE_ID')
CREATE NONCLUSTERED INDEX [S_DOMAIN_NODE_ID] ON [dbo].[S_DOMAIN] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_DOMAIN]') AND name = N'S_DOMAIN_VALUE')
CREATE NONCLUSTERED INDEX [S_DOMAIN_VALUE] ON [dbo].[S_DOMAIN] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_DOMAIN]') AND name = N'S_DOMAIN_VINDEX')
CREATE NONCLUSTERED INDEX [S_DOMAIN_VINDEX] ON [dbo].[S_DOMAIN] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[NODE_TYPE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[NODE_TYPE](
	[PKID] [varchar](128) NOT NULL,
	[DEFINITION] [varchar](128) NOT NULL,
	[TYPE] [char](1) NOT NULL CONSTRAINT [DF_NODE_TYPE_TYPE]  DEFAULT ('1'),
 CONSTRAINT [NODE_TYPE_PKID] UNIQUE CLUSTERED 
(
	[DEFINITION] ASC,
	[PKID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[NODE_TYPE]') AND name = N'INDEX_NODE_TYPE_DEF')
CREATE NONCLUSTERED INDEX [INDEX_NODE_TYPE_DEF] ON [dbo].[NODE_TYPE] 
(
	[DEFINITION] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[NODE_TYPE]') AND name = N'INDEX_NODE_TYPE_PKID')
CREATE NONCLUSTERED INDEX [INDEX_NODE_TYPE_PKID] ON [dbo].[NODE_TYPE] 
(
	[PKID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[NODE_TYPE]') AND name = N'INDEX_NODE_TYPE_TYPE')
CREATE NONCLUSTERED INDEX [INDEX_NODE_TYPE_TYPE] ON [dbo].[NODE_TYPE] 
(
	[TYPE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'缺省为主定义' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'NODE_TYPE', @level2type=N'COLUMN', @level2name=N'PKID'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PROPERTY_DEFAULT]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[PROPERTY_DEFAULT](
	[PROPERTY_DEFINITION_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](512) NOT NULL,
	[DEFINITION_ID] [varchar](128) NULL
) ON [PRIMARY]
END
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'PROPERTY_DEFINITION表主键' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFAULT', @level2type=N'COLUMN', @level2name=N'PROPERTY_DEFINITION_ID'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'NODE_DEFINITION表的主键' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFAULT', @level2type=N'COLUMN', @level2name=N'DEFINITION_ID'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PROPERTY_DEFINITION]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[PROPERTY_DEFINITION](
	[PKID] [varchar](128) NOT NULL,
	[NODE_DEFINITION_ID] [varchar](128) NOT NULL,
	[NAME] [varchar](512) NOT NULL,
	[MULTIPLE] [char](1) NOT NULL,
	[MIN_LENGTH] [numeric](38, 0) NOT NULL,
	[MAX_LENGTH] [numeric](38, 0) NOT NULL,
	[TYPE] [numeric](38, 0) NOT NULL,
	[ORDERNO] [numeric](38, 0) NULL,
	[DESCRIPTION] [varchar](1024) NULL,
	[EDITOR_TYPE] [varchar](512) NULL,
	[ENUM_ENTRY] [varchar](512) NULL,
	[REFERENCE_TYPE] [varchar](512) NULL,
	[DELETABLE] [char](1) NOT NULL CONSTRAINT [DF_PROPERTY_DEFINITION_DELETABLE]  DEFAULT ('1'),
	[READ_ONLY] [char](1) NULL CONSTRAINT [DF_PROPERTY_DEFINITION_READ_ONLY]  DEFAULT ('0'),
	[NODE_TYPE] [varchar](128) NULL,
 CONSTRAINT [PKID_PROPERTY_DEFINITION] UNIQUE CLUSTERED 
(
	[PKID] ASC,
	[NODE_DEFINITION_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PROPERTY_DEFINITION]') AND name = N'PROPERTY_DEFINITION_DEFINITION')
CREATE NONCLUSTERED INDEX [PROPERTY_DEFINITION_DEFINITION] ON [dbo].[PROPERTY_DEFINITION] 
(
	[NODE_DEFINITION_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PROPERTY_DEFINITION]') AND name = N'PROPERTY_DEFINITION_ENUM_ENTRY')
CREATE NONCLUSTERED INDEX [PROPERTY_DEFINITION_ENUM_ENTRY] ON [dbo].[PROPERTY_DEFINITION] 
(
	[ENUM_ENTRY] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PROPERTY_DEFINITION]') AND name = N'PROPERTY_DEFINITION_ORDERNO')
CREATE NONCLUSTERED INDEX [PROPERTY_DEFINITION_ORDERNO] ON [dbo].[PROPERTY_DEFINITION] 
(
	[ORDERNO] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PROPERTY_DEFINITION]') AND name = N'PROPERTY_DEFINITION_TYPE')
CREATE NONCLUSTERED INDEX [PROPERTY_DEFINITION_TYPE] ON [dbo].[PROPERTY_DEFINITION] 
(
	[TYPE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'由系统生成，不使用数据库提供的自动产生的主键' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFINITION', @level2type=N'COLUMN', @level2name=N'PKID'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Node_definition表的主键' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFINITION', @level2type=N'COLUMN', @level2name=N'NODE_DEFINITION_ID'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'（类别）名称' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFINITION', @level2type=N'COLUMN', @level2name=N'NAME'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'是否枚举' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFINITION', @level2type=N'COLUMN', @level2name=N'MULTIPLE'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'最小枚举个数 非枚举属性，0表示非必选，1表示必填' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFINITION', @level2type=N'COLUMN', @level2name=N'MIN_LENGTH'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'最大枚举个数 非枚举属性，该值无效' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFINITION', @level2type=N'COLUMN', @level2name=N'MAX_LENGTH'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'参考配置文件中对属性类型的定义' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFINITION', @level2type=N'COLUMN', @level2name=N'TYPE'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'同一节点定义下的序号' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFINITION', @level2type=N'COLUMN', @level2name=N'ORDERNO'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'该属性的描述' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFINITION', @level2type=N'COLUMN', @level2name=N'DESCRIPTION'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'表示这个属性在编辑的时候用哪个编辑器' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFINITION', @level2type=N'COLUMN', @level2name=N'EDITOR_TYPE'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'表示枚举字段对应的数据字典。' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFINITION', @level2type=N'COLUMN', @level2name=N'ENUM_ENTRY'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'表明引用类型的属性定义具体的引用类型' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFINITION', @level2type=N'COLUMN', @level2name=N'REFERENCE_TYPE'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'定义属性是否可写' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFINITION', @level2type=N'COLUMN', @level2name=N'READ_ONLY'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'复杂属性的类型' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'PROPERTY_DEFINITION', @level2type=N'COLUMN', @level2name=N'NODE_TYPE'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[pro_copy_Node2]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE [dbo].[pro_copy_Node2]
(
  @pro_new_contentID varchar(128),
  @pro_source_contentID varchar(128)
)
AS
declare cur CURSOR for SELECT name FROM sys.tables where name like ''_\_%'' escape ''\'';
declare @v_tablename varchar(30);
declare @v_sql varchar(1000);
declare @v_orderno varchar(128);
BEGIN
	declare cur_no CURSOR for select max(orderno)+1 from node n,(select parent_id,name from node where pkid = @pro_source_contentID) pn where n.parent_id=pn.parent_id and n.name=pn.name;
	open cur;
       fetch cur into @v_tablename;
    while (@@fetch_status=0) 
	begin
        set @v_sql=''insert into ''+@v_tablename+''(node_id,value,vindex,length) select ''+''''''''+@pro_new_contentID+''''''''+'' ,x.Value,x.vindex,x.length FROM ''+@v_tablename+ '' x where x.node_id''+''=''''''+@pro_source_contentID+'''''''';
        EXEC (@v_sql);
        fetch cur into @v_tablename;
    end;
	open cur_no;
	   fetch cur_no into @v_orderno;
       set @v_sql=''insert into node(pkid,definition,parent_id,name,type,orderno) select ''+''''''''+@pro_new_contentID+''''''''+'' ,n.definition,n.parent_id,n.name,n.type,''+''''''''+@v_orderno+''''''''+'' from node n where n.pkid''+''=''''''+@pro_source_contentID+'''''''';
       EXEC (@v_sql);
	close cur_no;
    deallocate cur_no;
    close cur;
    deallocate cur;
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_LABEL]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_LABEL](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_LABEL_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_LABEL_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_LABEL]') AND name = N'S_LABEL_NODE_ID')
CREATE NONCLUSTERED INDEX [S_LABEL_NODE_ID] ON [dbo].[S_LABEL] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_LABEL]') AND name = N'S_LABEL_VALUE')
CREATE NONCLUSTERED INDEX [S_LABEL_VALUE] ON [dbo].[S_LABEL] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_LABEL]') AND name = N'S_LABEL_VINDEX')
CREATE NONCLUSTERED INDEX [S_LABEL_VINDEX] ON [dbo].[S_LABEL] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[recursive_select]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE [dbo].[recursive_select] 
( 
  @table_name       varchar(128),
  @child_ColName    varchar(128),
  @parent_ColName   varchar(128),
  @child_value      varchar(128),
  @parent_value     varchar(128),
  @return_ColName   varchar(128),
  @result           varchar(max)   output                               
)
as
set nocount on
begin
declare @sqlresult varchar(128);
declare @sqlresults varchar(128);
declare @sqltemp varchar(max);
declare @temp varchar(12);
declare temp cursor for select name from sys.tables where name=''temp1'' or name =''temp2'';
open temp;
fetch temp into @temp;
    while (@@fetch_status=0)
	begin
		exec(''drop table ''+@temp);
		fetch temp into @temp;	
	end;
close temp;
deallocate temp;
set @sqltemp=''CREATE TABLE temp1(''+@child_ColName+'' varchar(128),''+@parent_ColName+'' varchar(128),leve numeric)'';
exec (@sqltemp);
set @sqltemp=''CREATE TABLE temp2(''+@child_ColName+'' varchar(128),''+@parent_ColName+'' varchar(128),leve numeric);'';
exec (@sqltemp);

declare @inr_value numeric;
declare @levee numeric;
declare @sql1 varchar(max);
declare @sql2 varchar(max);
declare @sql  varchar(max);

set @levee=1;

if (@parent_value is not null and @child_value is null)
begin
set @sql1=
''insert into temp1 select n.''+@child_ColName+'', n.''+@parent_ColName+'', ''+cast(@levee as varchar)+'' from ''+@table_name+'' n where n.''+@parent_ColName+'' = ''''''+@parent_value+'''''''';
exec (@sql1);
insert into temp2 select * from temp1;
select @inr_value=count(*) from temp2;
  while (@inr_value <> 0) 
	begin
    set @sql1=
    ''insert into temp2 select n.''+@child_ColName+'', n.''+@parent_ColName+'', a.leve + 1 from ''+@table_name+'' n, temp1 a where a.''+@child_ColName+'' = n.''+@parent_ColName+'' and a.leve''+'' = ''''''+cast(@levee as varchar)+'''''''';
    exec (@sql1);
    select @inr_value=count(*) from temp2 b where b.leve = @levee + 1;
    delete from temp1; -- temp1只保留最新一层的子叶
    set @sql=''insert into temp1 select distinct b.''+@child_ColName+'', b.''+@parent_ColName+'', b.leve from temp2 b where b.leve''+'' = ''''''+cast(@levee+1 as varchar)+'''''''';
    exec (@sql1);
    set @levee = @levee + 1;
   end;
set @sql= ''declare cur cursor for Select b.''+@return_ColName+'' From temp2 b'';
exec (@sql);
open cur;
    fetch cur into @sqlresult;
	set @result=''''''''+@sqlresult+''''''''
while (@@fetch_status=0)
begin
    fetch cur into @sqlresult;
	if(@@fetch_status=0)
		set @result = @result+'',''''''+@sqlresult+'''''''';	
end;
close cur;
deallocate cur;
end;
else
begin
set @sql2=''insert into temp1 select n.''+@child_ColName+'', n.''+@parent_ColName+'', ''+cast(@levee as varchar)+'' from ''+@table_name+'' n where n.''+@child_ColName+'' = ''''''+@child_value+'''''''';
exec (@sql2);
insert into temp2 select * from temp1;
select @inr_value=count(*) from temp2;
  while (@inr_value <> 0) 
	begin
    set @sql2=''insert into temp2 select n.''+@child_ColName+'', n.''+@parent_ColName+'', a.leve + 1 from ''+@table_name+'' n, temp1 a where a.''+@child_ColName+'' = n.''+@parent_ColName+'' and a.leve''+'' = ''''''+cast(@levee as varchar)+'''''''';
    exec (@sql2);
    select @inr_value=count(*) from temp2 b where b.leve = @levee + 1;
    delete from temp1; -- temp1只保留最新一层的子叶
    set @sql2=''insert into temp1 select distinct b.''+@child_ColName+'', b.''+@parent_ColName+'', b.leve from temp2 b where b.leve''+'' = ''''''+cast(@levee+1 as varchar)+'''''''';
    exec (@sql2);
    set @levee = @levee + 1;
   end;
set @sql= ''declare cur cursor for Select b.''+@return_ColName+'' From temp2 b'';
exec (@sql);
open cur;
    fetch cur into @sqlresult;
	set @result=''''''''+@sqlresult+'''''''';
while (@@fetch_status=0)
begin
    fetch cur into @sqlresult;
	if(@@fetch_status=0)
		set @result = @result+'',''''''+@sqlresult+'''''''';	
end;
close cur;
deallocate cur;
end;
drop table temp1;
drop table temp2;
end;' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_LINK]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_LINK](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_LINK_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_LINK_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_LINK]') AND name = N'S_LINK_NODE_ID')
CREATE NONCLUSTERED INDEX [S_LINK_NODE_ID] ON [dbo].[S_LINK] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_LINK]') AND name = N'S_LINK_VALUE')
CREATE NONCLUSTERED INDEX [S_LINK_VALUE] ON [dbo].[S_LINK] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_LINK]') AND name = N'S_LINK_VINDEX')
CREATE NONCLUSTERED INDEX [S_LINK_VINDEX] ON [dbo].[S_LINK] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[B_ISFOLDER]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[B_ISFOLDER](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [char](1) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_B_ISFOLDER_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_B_ISFOLDER_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[B_ISFOLDER]') AND name = N'B_ISFOLDER_NODE_ID')
CREATE NONCLUSTERED INDEX [B_ISFOLDER_NODE_ID] ON [dbo].[B_ISFOLDER] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[B_ISFOLDER]') AND name = N'B_ISFOLDER_VALUE')
CREATE NONCLUSTERED INDEX [B_ISFOLDER_VALUE] ON [dbo].[B_ISFOLDER] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[B_ISFOLDER]') AND name = N'B_ISFOLDER_VINDEX')
CREATE NONCLUSTERED INDEX [B_ISFOLDER_VINDEX] ON [dbo].[B_ISFOLDER] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_MIME]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_MIME](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_MIME_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_MIME_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_MIME]') AND name = N'S_MIME_NODE_ID')
CREATE NONCLUSTERED INDEX [S_MIME_NODE_ID] ON [dbo].[S_MIME] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_MIME]') AND name = N'S_MIME_VALUE')
CREATE NONCLUSTERED INDEX [S_MIME_VALUE] ON [dbo].[S_MIME] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_MIME]') AND name = N'S_MIME_VINDEX')
CREATE NONCLUSTERED INDEX [S_MIME_VINDEX] ON [dbo].[S_MIME] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_MODEL]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_MODEL](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_MODEL_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_MODEL_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_MODEL]') AND name = N'S_MODEL_NODE_ID')
CREATE NONCLUSTERED INDEX [S_MODEL_NODE_ID] ON [dbo].[S_MODEL] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_MODEL]') AND name = N'S_MODEL_VALUE')
CREATE NONCLUSTERED INDEX [S_MODEL_VALUE] ON [dbo].[S_MODEL] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_MODEL]') AND name = N'S_MODEL_VINDEX')
CREATE NONCLUSTERED INDEX [S_MODEL_VINDEX] ON [dbo].[S_MODEL] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_NAVIGATETEMPLATES]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_NAVIGATETEMPLATES](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_NAVIGATETEMPLATES_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_NAVIGATETEMPLATES_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_NAVIGATETEMPLATES]') AND name = N'S_NAVIGATETEMPLATES_NODE_ID')
CREATE NONCLUSTERED INDEX [S_NAVIGATETEMPLATES_NODE_ID] ON [dbo].[S_NAVIGATETEMPLATES] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_NAVIGATETEMPLATES]') AND name = N'S_NAVIGATETEMPLATES_VALUE')
CREATE NONCLUSTERED INDEX [S_NAVIGATETEMPLATES_VALUE] ON [dbo].[S_NAVIGATETEMPLATES] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_NAVIGATETEMPLATES]') AND name = N'S_NAVIGATETEMPLATES_VINDEX')
CREATE NONCLUSTERED INDEX [S_NAVIGATETEMPLATES_VINDEX] ON [dbo].[S_NAVIGATETEMPLATES] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_ORG_ENTERPRISENAME]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_ORG_ENTERPRISENAME](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_ORG_ENTERPRISENAME_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_ORG_ENTERPRISENAME_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_ORG_ENTERPRISENAME]') AND name = N'S_ORG_ENTERPRISENAME_NODE_ID')
CREATE NONCLUSTERED INDEX [S_ORG_ENTERPRISENAME_NODE_ID] ON [dbo].[S_ORG_ENTERPRISENAME] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_ORG_ENTERPRISENAME]') AND name = N'S_ORG_ENTERPRISENAME_VALUE')
CREATE NONCLUSTERED INDEX [S_ORG_ENTERPRISENAME_VALUE] ON [dbo].[S_ORG_ENTERPRISENAME] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_ORG_ENTERPRISENAME]') AND name = N'S_ORG_ENTERPRISENAME_VINDEX')
CREATE NONCLUSTERED INDEX [S_ORG_ENTERPRISENAME_VINDEX] ON [dbo].[S_ORG_ENTERPRISENAME] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[P_PROP703]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[P_PROP703](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](512) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_P_PROP703_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_P_PROP703_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[P_PROP703]') AND name = N'P_PROP703_NODE_ID')
CREATE NONCLUSTERED INDEX [P_PROP703_NODE_ID] ON [dbo].[P_PROP703] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[P_PROP703]') AND name = N'P_PROP703_VALUE')
CREATE NONCLUSTERED INDEX [P_PROP703_VALUE] ON [dbo].[P_PROP703] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[P_PROP703]') AND name = N'P_PROP703_VINDEX')
CREATE NONCLUSTERED INDEX [P_PROP703_VINDEX] ON [dbo].[P_PROP703] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_ORG_QQ]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_ORG_QQ](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_ORG_QQ_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_ORG_QQ_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_ORG_QQ]') AND name = N'S_ORG_QQ_NODE_ID')
CREATE NONCLUSTERED INDEX [S_ORG_QQ_NODE_ID] ON [dbo].[S_ORG_QQ] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_ORG_QQ]') AND name = N'S_ORG_QQ_VALUE')
CREATE NONCLUSTERED INDEX [S_ORG_QQ_VALUE] ON [dbo].[S_ORG_QQ] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_ORG_QQ]') AND name = N'S_ORG_QQ_VINDEX')
CREATE NONCLUSTERED INDEX [S_ORG_QQ_VINDEX] ON [dbo].[S_ORG_QQ] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[QUARTERLY_COUNT]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[QUARTERLY_COUNT](
	[SUMVALUE] [numeric](38, 0) NOT NULL CONSTRAINT [DF_QUARTERLY_COUNT_SUMVALUE]  DEFAULT ((1)),
	[NAME] [varchar](128) NOT NULL,
	[ACCESS_QUARTER] [numeric](38, 0) NOT NULL,
	[ACCESS_YEAR] [numeric](38, 0) NOT NULL
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[QUARTERLY_COUNT]') AND name = N'I_QUARTERLY_NAME')
CREATE NONCLUSTERED INDEX [I_QUARTERLY_NAME] ON [dbo].[QUARTERLY_COUNT] 
(
	[NAME] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[QUARTERLY_COUNT]') AND name = N'I_QUARTERLY_SUMVALUE')
CREATE NONCLUSTERED INDEX [I_QUARTERLY_SUMVALUE] ON [dbo].[QUARTERLY_COUNT] 
(
	[SUMVALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[QUARTERLY_COUNT]') AND name = N'QUARTERLY_ACCESS_QUARTER')
CREATE NONCLUSTERED INDEX [QUARTERLY_ACCESS_QUARTER] ON [dbo].[QUARTERLY_COUNT] 
(
	[ACCESS_QUARTER] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[QUARTERLY_COUNT]') AND name = N'QUARTERLY_ACCESS_YEAR')
CREATE NONCLUSTERED INDEX [QUARTERLY_ACCESS_YEAR] ON [dbo].[QUARTERLY_COUNT] 
(
	[ACCESS_YEAR] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'计数值' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'QUARTERLY_COUNT', @level2type=N'COLUMN', @level2name=N'SUMVALUE'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'可以是系统名称，也可以是对象的ID' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'QUARTERLY_COUNT', @level2type=N'COLUMN', @level2name=N'NAME'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'季度' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'QUARTERLY_COUNT', @level2type=N'COLUMN', @level2name=N'ACCESS_QUARTER'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'年份' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'QUARTERLY_COUNT', @level2type=N'COLUMN', @level2name=N'ACCESS_YEAR'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PATH]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_PATH](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_PATH_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_PATH_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_PATH]') AND name = N'S_PATH_NODE_ID')
CREATE NONCLUSTERED INDEX [S_PATH_NODE_ID] ON [dbo].[S_PATH] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_PATH]') AND name = N'S_PATH_VALUE')
CREATE NONCLUSTERED INDEX [S_PATH_VALUE] ON [dbo].[S_PATH] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_PATH]') AND name = N'S_PATH_VINDEX')
CREATE NONCLUSTERED INDEX [S_PATH_VINDEX] ON [dbo].[S_PATH] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PRICE_DESC]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_PRICE_DESC](
	[NODE_ID] [varchar](128) NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NULL,
	[LENGTH] [numeric](38, 0) NULL
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_PRICE_DESC]') AND name = N'S_PRICE_DESC_NODE_ID')
CREATE NONCLUSTERED INDEX [S_PRICE_DESC_NODE_ID] ON [dbo].[S_PRICE_DESC] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_PRICE_DESC]') AND name = N'S_PRICE_DESC_VALUE')
CREATE NONCLUSTERED INDEX [S_PRICE_DESC_VALUE] ON [dbo].[S_PRICE_DESC] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_PRICE_DESC]') AND name = N'S_PRICE_DESC_VINDEX')
CREATE NONCLUSTERED INDEX [S_PRICE_DESC_VINDEX] ON [dbo].[S_PRICE_DESC] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CLICKCOUNT]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[CLICKCOUNT](
	[SUMVALUE] [numeric](38, 0) NULL,
	[NAME] [varchar](128) NULL
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[CLICKCOUNT]') AND name = N'CLICK_NAME')
CREATE NONCLUSTERED INDEX [CLICK_NAME] ON [dbo].[CLICKCOUNT] 
(
	[NAME] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[CLICKCOUNT]') AND name = N'CLICK_SUMVALUE')
CREATE NONCLUSTERED INDEX [CLICK_SUMVALUE] ON [dbo].[CLICKCOUNT] 
(
	[SUMVALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DIARY_COUNT]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[DIARY_COUNT](
	[SUMVALUE] [numeric](38, 0) NOT NULL CONSTRAINT [DF_DIARY_COUNT_SUMVALUE]  DEFAULT ((1)),
	[NAME] [varchar](128) NOT NULL,
	[ACCESS_DATE] [datetime] NOT NULL
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DIARY_COUNT]') AND name = N'I_DIARY_ACCESSDATE')
CREATE NONCLUSTERED INDEX [I_DIARY_ACCESSDATE] ON [dbo].[DIARY_COUNT] 
(
	[ACCESS_DATE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DIARY_COUNT]') AND name = N'I_DIARY_NAME')
CREATE NONCLUSTERED INDEX [I_DIARY_NAME] ON [dbo].[DIARY_COUNT] 
(
	[NAME] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DIARY_COUNT]') AND name = N'I_DIARY_SUMVALUE')
CREATE NONCLUSTERED INDEX [I_DIARY_SUMVALUE] ON [dbo].[DIARY_COUNT] 
(
	[SUMVALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'计数值' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'DIARY_COUNT', @level2type=N'COLUMN', @level2name=N'SUMVALUE'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'可以是系统名称，也可以是对象的ID' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'DIARY_COUNT', @level2type=N'COLUMN', @level2name=N'NAME'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'点击发生的日期。日期和小时组合形成时间点' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'DIARY_COUNT', @level2type=N'COLUMN', @level2name=N'ACCESS_DATE'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[D_CREATEDTIME]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[D_CREATEDTIME](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [datetime] NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_D_CREATEDTIME_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_D_CREATEDTIME_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[D_CREATEDTIME]') AND name = N'D_CREATEDTIME_NODE_ID')
CREATE NONCLUSTERED INDEX [D_CREATEDTIME_NODE_ID] ON [dbo].[D_CREATEDTIME] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[D_CREATEDTIME]') AND name = N'D_CREATEDTIME_VALUE')
CREATE NONCLUSTERED INDEX [D_CREATEDTIME_VALUE] ON [dbo].[D_CREATEDTIME] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[D_CREATEDTIME]') AND name = N'D_CREATEDTIME_VINDEX')
CREATE NONCLUSTERED INDEX [D_CREATEDTIME_VINDEX] ON [dbo].[D_CREATEDTIME] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[R_CREATOR]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[R_CREATOR](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](128) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_R_CREATOR_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_R_CREATOR_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[R_CREATOR]') AND name = N'R_CREATOR_NODE_ID')
CREATE NONCLUSTERED INDEX [R_CREATOR_NODE_ID] ON [dbo].[R_CREATOR] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[R_CREATOR]') AND name = N'R_CREATOR_VALUE')
CREATE NONCLUSTERED INDEX [R_CREATOR_VALUE] ON [dbo].[R_CREATOR] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[R_CREATOR]') AND name = N'R_CREATOR_VINDEX')
CREATE NONCLUSTERED INDEX [R_CREATOR_VINDEX] ON [dbo].[R_CREATOR] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[R_CREATORID]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[R_CREATORID](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](128) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_R_CREATORID_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_R_CREATORID_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[R_CREATORID]') AND name = N'R_CREATORID_NODE_ID')
CREATE NONCLUSTERED INDEX [R_CREATORID_NODE_ID] ON [dbo].[R_CREATORID] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[R_CREATORID]') AND name = N'R_CREATORID_VALUE')
CREATE NONCLUSTERED INDEX [R_CREATORID_VALUE] ON [dbo].[R_CREATORID] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[R_CREATORID]') AND name = N'R_CREATORID_VINDEX')
CREATE NONCLUSTERED INDEX [R_CREATORID_VINDEX] ON [dbo].[R_CREATORID] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[recursive_select_sql]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE [dbo].[recursive_select_sql] 
( 
  @table_name       varchar(128),
  @child_ColName    varchar(128),
  @parent_ColName   varchar(128),
  @child_value_sql  varchar(128),
  @parent_value_sql varchar(128),
  @return_ColName   varchar(128),
  @result           varchar(max)   output                               
)
as
set nocount on
begin
declare @sqlresult varchar(128);
declare @sqlresults varchar(128);
declare @sqltemp varchar(max);
declare @temp varchar(12);
declare temp cursor for select name from sys.tables where name=''temp1'' or name =''temp2'';
open temp;
fetch temp into @temp;
    while (@@fetch_status=0)
	begin
		exec(''drop table ''+@temp);
		fetch temp into @temp;	
	end;
close temp;
deallocate temp;
set @sqltemp=''CREATE TABLE temp1(''+@child_ColName+'' varchar(128),''+@parent_ColName+'' varchar(128),leve numeric)'';
exec (@sqltemp);
set @sqltemp=''CREATE TABLE temp2(''+@child_ColName+'' varchar(128),''+@parent_ColName+'' varchar(128),leve numeric);'';
exec (@sqltemp);

declare @inr_value numeric;
declare @levee numeric;
declare @sql1 varchar(max);
declare @sql2 varchar(max);
declare @sql  varchar(max);

set @levee=1;

if (@parent_value_sql is not null and @child_value_sql is null)
begin
set @sql1=
''insert into temp1 select n.''+@child_ColName+'', n.''+@parent_ColName+'', ''+cast(@levee as varchar)+'' from ''+@table_name+'' n where n.''+@parent_ColName+'' in (''+@parent_value_sql+'')'';
exec (@sql1);
insert into temp2 select * from temp1;
select @inr_value=count(*) from temp2;
  while (@inr_value <> 0) 
	begin
    set @sql1=
    ''insert into temp2 select n.''+@child_ColName+'', n.''+@parent_ColName+'', a.leve + 1 from ''+@table_name+'' n, temp1 a where a.''+@child_ColName+'' = n.''+@parent_ColName+'' and a.leve''+'' = ''''''+cast(@levee as varchar)+'''''''';
    exec (@sql1);
    select @inr_value=count(*) from temp2 b where b.leve = @levee + 1;
    delete from temp1; -- temp1只保留最新一层的子叶
    set @sql=''insert into temp1 select distinct b.''+@child_ColName+'', b.''+@parent_ColName+'', b.leve from temp2 b where b.leve''+'' = ''''''+cast(@levee+1 as varchar)+'''''''';
    exec (@sql1);
    set @levee = @levee + 1;
   end;
set @sql= ''declare cur cursor for Select b.''+@return_ColName+'' From temp2 b'';
exec (@sql);
open cur;
    fetch cur into @sqlresult;
	set @result=''''''''+@sqlresult+'''''''';
while (@@fetch_status=0)
begin
    fetch cur into @sqlresult;
	if(@@fetch_status=0)
		set @result = @result+'',''''''+@sqlresult+'''''''';	
end;
close cur;
deallocate cur;
end;
else
begin
set @sql2=''insert into temp1 select n.''+@child_ColName+'', n.''+@parent_ColName+'', ''+cast(@levee as varchar)+'' from ''+@table_name+'' n where n.''+@child_ColName+'' in (''+@child_value_sql+'')'';
exec (@sql2);
insert into temp2 select * from temp1;
select @inr_value=count(*) from temp2;
  while (@inr_value <> 0) 
	begin
    set @sql2=''insert into temp2 select n.''+@child_ColName+'', n.''+@parent_ColName+'', a.leve + 1 from ''+@table_name+'' n, temp1 a where a.''+@child_ColName+'' = n.''+@parent_ColName+'' and a.leve''+'' = ''''''+cast(@levee as varchar)+'''''''';
    exec (@sql2);
    select @inr_value=count(*) from temp2 b where b.leve = @levee + 1;
    delete from temp1; -- temp1只保留最新一层的子叶
    set @sql2=''insert into temp1 select distinct b.''+@child_ColName+'', b.''+@parent_ColName+'', b.leve from temp2 b where b.leve''+'' = ''''''+cast(@levee+1 as varchar)+'''''''';
    exec (@sql2);
    set @levee = @levee + 1;
   end;
set @sql= ''declare cur cursor for Select b.''+@return_ColName+'' From temp2 b'';
exec (@sql);
open cur;
    fetch cur into @sqlresult;
	set @result=''''''''+@sqlresult+'''''''';
while (@@fetch_status=0)
begin
    fetch cur into @sqlresult;
	if(@@fetch_status=0)
		set @result = @result+'',''''''+@sqlresult+'''''''';	
end;
close cur;
deallocate cur;
end;
drop table temp1;
drop table temp2;
end;
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_TEMPLATES]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[S_TEMPLATES](
	[NODE_ID] [varchar](128) NOT NULL,
	[VALUE] [varchar](900) NULL,
	[VINDEX] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_TEMPLATES_VINDEX]  DEFAULT ((0)),
	[LENGTH] [numeric](38, 0) NOT NULL CONSTRAINT [DF_S_TEMPLATES_LENGTH]  DEFAULT ((0))
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_TEMPLATES]') AND name = N'S_TEMPLATES_NODE_ID')
CREATE NONCLUSTERED INDEX [S_TEMPLATES_NODE_ID] ON [dbo].[S_TEMPLATES] 
(
	[NODE_ID] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_TEMPLATES]') AND name = N'S_TEMPLATES_VALUE')
CREATE NONCLUSTERED INDEX [S_TEMPLATES_VALUE] ON [dbo].[S_TEMPLATES] 
(
	[VALUE] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[S_TEMPLATES]') AND name = N'S_TEMPLATES_VINDEX')
CREATE NONCLUSTERED INDEX [S_TEMPLATES_VINDEX] ON [dbo].[S_TEMPLATES] 
(
	[VINDEX] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[pro_count_new]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE [dbo].[pro_count_new] AS
declare @pro_delete_sql varchar(128);
declare @pro_delete1_sql varchar(128);
declare @pro_delete2_sql varchar(128);
declare @pro_delete3_sql varchar(128);
declare @pro_delete4_sql varchar(128);
declare @pro_delete5_sql varchar(128);
set @pro_delete_sql=  ''truncate table  realtime_count'';
set @pro_delete1_sql= ''truncate table  diary_count'';
set @pro_delete2_sql= ''truncate table  monthly_count'';
set @pro_delete3_sql= ''truncate table  weekly_count'';
set @pro_delete4_sql= ''truncate table  quarterly_count'';
set @pro_delete5_sql= ''truncate table  yearly_count'';
BEGIN
	exec (@pro_delete1_sql);
    exec (@pro_delete2_sql);
    exec (@pro_delete3_sql);
    exec (@pro_delete4_sql);
    exec (@pro_delete5_sql);

 insert into diary_count(sumvalue, name, access_date)
      select sum(t.sumvalue),
             t.name,
             convert(varchar(10),t.access_time,20)
        from realtime_count t
       group by convert(varchar(10),t.access_time,20), t.name;
       
       exec (@pro_delete_sql);

    insert
      into monthly_count (sumvalue, name, access_month, access_year)
      select sum(t.sumvalue),
             t.name,
             month(t.access_date),
             year(t.access_date)
        from diary_count t
       group by t.name,
                month(t.access_date),
                 year(t.access_date)

    insert
      into weekly_count (sumvalue, name, access_week, access_year)
      select sum(t.sumvalue),
             t.name,
             DatePart(WW,t.access_date),
             year(t.access_date)
        from diary_count t
       group by t.name,
                DatePart(WW,t.access_date),
                year(t.access_date)

    insert
      into quarterly_count (sumvalue, NAME, ACCESS_QUARTER, ACCESS_YEAR)
      select sum(t.sumvalue),
             t.name,
             ceiling(t.access_month / 3),
             t.access_year
        from monthly_count t
       group by t.name, ceiling(t.access_month / 3), t.access_year;

    insert
      into yearly_count (sumvalue, name, access_year)
      select sum(t.sumvalue), t.name, t.ACCESS_YEAR
        from quarterly_count t
       group by t.name, t.ACCESS_YEAR;
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[pro_delete_Node2]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE procedure [dbo].[pro_delete_Node2]
@ID varchar(128)
as
declare @cur_nodeid  varchar(128);
declare @resource_nodeid varchar(128);
declare @v_sql varchar(200);
declare @v_rsql varchar(max);
declare @sql varchar(max);
declare @v_tablename varchar(30);
Declare @res varchar(max);
Declare @resource varchar(max);
declare cur_tablenames cursor for SELECT name FROM sys.tables where name like ''_\_%'' escape ''\'';
begin
exec recursive_select ''node'',''pkid'',''parent_id'',@ID,null,''pkid'',@res output;
set @sql=''Declare cur_nodeid Cursor for Select n.pkid From node n where n.pkid in (''+@res+'')'';
exec(@sql);
open cur_nodeid;
    fetch cur_nodeid into @cur_nodeid;
    while (@@fetch_status=0) 
	begin
          open cur_tablenames;
			FETCH cur_tablenames INTO @v_tablename;
			while (@@fetch_status=0) 
             begin				 
			   if (CHARINDEX(''R_'',@v_tablename)=1) 
			   begin
				   set @v_sql=''delete from ''+@v_tablename+'' where node_id''+''=''''''+@cur_nodeid+'''''' or value''+''=''''''+@cur_nodeid+'''''''';
               end;
			   else
			   begin
			   if (CHARINDEX(''P_'',@v_tablename)=1)
			   begin
					exec recursive_select ''node'',''parent_id'',''pkid'',null,@cur_nodeid,''parent_id'',@resource output;
					set @v_rsql=''Declare cur_resource Cursor for select pkid  
					from node n, 
					(select value,count(1) as n from ''+@v_tablename+'' where value in (select value from ''+@v_tablename+'' where node_id=''''''+@cur_nodeid+'''''' ) group by value) t 
					where t.n = 1
					and n.name = substring(t.value, CHARINDEX(''+''''''/''''''+'',t.value,2) + 1,len(t.value)) 
					and n.parent_id = 
					(select pkid from node 
					where parent_id = 
					(select pkid from node where pkid in (''+@resource+'') and parent_id=''+''''''root''''''+'' and type=1) 
					and name = ''+''''''resources''''''+'')'';
					exec (@v_rsql);
					open cur_resource;
						fetch cur_resource into @resource_nodeid;
					while (@@fetch_status=0) 
					begin
						Delete From node Where pkid = @resource_nodeid;
                        Delete From i_resource_content Where node_id = @resource_nodeid;
                        Delete From s_mime Where node_id = @resource_nodeid;
                        Delete From d_createdTime Where node_id = @resource_nodeid;
                        Delete From l_length  Where node_id = @resource_nodeid;
						fetch cur_resource into @resource_nodeid;
					end;
					close cur_resource;
					deallocate cur_resource;
				end;
				set @v_sql=''delete from ''+@v_tablename+'' where node_id''+''=''''''+@cur_nodeid+'''''''';
				end;
                exec (@v_sql);
                FETCH cur_tablenames INTO @v_tablename;
             end;
          close cur_tablenames;
          deallocate cur_tablenames;
	Delete From node  Where pkid = @cur_nodeid;
    fetch cur_nodeid into @cur_nodeid;
    end;
    close cur_nodeid;
    deallocate cur_nodeid;
end;
' 
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[pro_propertyDefinition]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
create PROCEDURE [dbo].[pro_propertyDefinition]
--整理property_definition中不完整的属性
--步骤1 遍历node_definition
--步骤2 对superid不为空的加载其父大纲的属性 有一次遍历
AS
Declare @definitionID  varchar(128);
Declare @superID  varchar(128);
  --定义游标
Declare @sql varchar(max);
Declare c1 Cursor  for Select n.pkid,n.super_id From node_definition n  Where n.super_id Is Not Null;
BEGIN
   Open c1;
   Fetch c1 Into @definitionID,@superID;
   While (@@fetch_status=0)
   Begin
    Declare @property  varchar(128); --super definition property
    set @sql=''Declare c2 Cursor for Select p.pkid From property_definition p  Where p.node_definition_id''+'' = ''''''+@superID+'''''''';
    exec(@sql);
     Open c2;
     Fetch c2 Into @property;
     While (@@fetch_status=0)
	 begin
      Declare @pro_num numeric(38,0);
      Select @pro_num=Count(*) From property_definition r
         Where r.pkid =@property And r.node_definition_id =@definitionID;
      If(@pro_num=0) 
      insert into PROPERTY_DEFINITION (PKID, NODE_DEFINITION_ID, NAME, MULTIPLE, MIN_LENGTH, MAX_LENGTH, TYPE, ORDERNO, DESCRIPTION, EDITOR_TYPE, ENUM_ENTRY, REFERENCE_TYPE, DELETABLE, READ_ONLY, NODE_TYPE)
      Select D.PKID,@definitionID,D.NAME,d.multiple,d.min_length,d.max_length,d.type,d.orderno,d.description,d.editor_type,d.enum_entry,d.reference_type,''0'',d.read_only,d.Node_Type
      From property_definition d
      Where d.pkid =@property And d.node_definition_id =@superID;
      Fetch c2 Into @property;
     End;
      Close c2;
      DEALLOCATE c2;
    Fetch c1 Into @definitionID,@superID;
   End;
END
' 
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[pro_delete_NodeDefinition]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE [dbo].[pro_delete_NodeDefinition]
@ID varchar(128)
AS
BEGIN
 Declare @cur_NodeID  varchar(32);
 Declare @res varchar(max);
 Declare @sql varchar(max);
 declare @time varchar(100);
  --定义游标
exec recursive_select ''node_definition'',''pkid'',''super_id'',@ID,null,''pkid'',@res output;
set @sql=''Declare cur Cursor for Select n.pkid From node_definition n where n.delete_mark<>''+cast(1 as varchar)+'' and n.pkid in (''+@res+'')'';
exec(@sql);
Open cur;
Fetch cur Into @cur_NodeID;
declare tim cursor for select CONVERT(varchar(100),getdate(),20);
open tim;
fetch tim into @time;
 While (@@fetch_status=0)
   begin
    set @sql=''update NODE_DEFINITION set DELETE_MARK=''+cast(1 as varchar)+'',  PKID=PKID+''''''+cast('' ''+@time as varchar)+'''''' where PKID''+''=''''''+@cur_NodeID+'''''''';
    exec(@sql);
    Fetch cur Into @cur_NodeID;
   End
 Close tim;
 DEALLOCATE tim;
 Close cur;
 DEALLOCATE cur;
 end;' 
END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[pro_insert_NodeDefinition]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
create PROCEDURE [dbo].[pro_insert_NodeDefinition]
(
@PKID varchar(128), 
@DESCRIPTION varchar(512),
@IS_SYSTEM Char(1), 
@DELETE_MARK Char(1),
@CREATE_TIME DateTime,
@Name varchar(512),
@SUPER_ID varchar(128)
)
AS

BEGIN
Insert Into node_definition (pkid,delete_mark,description,is_system,create_time,Name) 
       Values (@PKID, @DELETE_MARK,@DESCRIPTION,@IS_SYSTEM, @CREATE_TIME,@NAME);
--Insert Into node_definition_super (definition_id,super_id,Type) 
--       Values (@PKID,@SUPER_ID,''1'');
END
' 
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[pro_update_NodeDefinition]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
create PROCEDURE [dbo].[pro_update_NodeDefinition]
( @pro_PKID        VARCHAR(128),
  @pro_DESCRIPTION VARCHAR(512),
  @pro_IS_SYSTEM   CHAR(1),
  @pro_DELETE_MARK CHAR(1),
  @pro_name        Varchar(512),
  @pro_SUPER_ID    VARCHAR(128))
AS
BEGIN
    update NODE_DEFINITION 
     set DESCRIPTION = @pro_DESCRIPTION,
         IS_SYSTEM   = @pro_IS_SYSTEM,
         DELETE_MARK = @pro_DELETE_MARK,
         name        = @pro_name
   where PKID = @pro_PKID;

--  update NODE_DEFINITION_SUPER 
--     set SUPER_ID = @pro_SUPER_ID
--   where DEFINITION_ID = @pro_PKID
--     And Type = ''1'';
END
' 
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[pro_rankordernos]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE [dbo].[pro_rankordernos]
AS
declare curpn CURSOR for select n.parent_id ,n.name from node n group by n.parent_id ,n.name order by name;
declare @pro_parent_id varchar(128);
declare @pro_name varchar(128);
declare @pro_pkid varchar(128);
declare @pro_rn varchar(128);
declare @v_sql varchar(1000);
BEGIN
	open curpn;
       fetch curpn into @pro_parent_id,@pro_name;
    while (@@fetch_status=0) 
	begin
		if object_id(''tempdb..##RangeNo'') is not null
		drop table ##RangeNo;
		set @v_sql=''select n.pkid, n.orderno,identity(int,1,1) as rownum into ##RangeNo from node n where n.parent_id = ''''''+@pro_parent_id+'''''' and n.name = ''''''+@pro_name+'''''' and type=1 order by n.orderno''
		EXEC (@v_sql);
		declare cur CURSOR for select pkid,rownum from ##RangeNo where orderno<>rownum;
		open cur;
		   fetch cur into @pro_pkid,@pro_rn;
		while (@@fetch_status=0) 
		begin
		 set @v_sql=''update node set orderno=''''''+@pro_rn+'''''' where pkid=''''''+@pro_pkid+'''''''';
		 EXEC (@v_sql);
		 fetch cur into @pro_pkid,@pro_rn;
		end;
		close cur;
		deallocate cur;
		drop table ##RangeNo;
		fetch curpn into @pro_parent_id,@pro_name;
	end;
	close curpn;
    deallocate curpn;
END' 
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[pro_rankorderno]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE [dbo].[pro_rankorderno]
(
  @pro_parent_id varchar(128),
  @pro_name varchar(128)
)
AS
declare @pro_pkid varchar(128);
declare @pro_rn varchar(128);
declare @v_sql varchar(1000);
BEGIN
	if object_id(''tempdb..##RangeNo'') is not null
		drop table ##RangeNo;
	set @v_sql=''select n.pkid, n.orderno,identity(int,1,1) as rownum into ##RangeNo from node n where n.parent_id = ''''''+@pro_parent_id+'''''' and n.name = ''''''+@pro_name+'''''' and type=1 order by n.orderno''
	EXEC (@v_sql);
	declare cur CURSOR for select pkid,rownum from ##RangeNo where orderno<>rownum;
	open cur;
       fetch cur into @pro_pkid,@pro_rn;
    while (@@fetch_status=0) 
	begin
        set @v_sql=''update node set orderno=''''''+@pro_rn+'''''' where pkid=''''''+@pro_pkid+'''''''';
        EXEC (@v_sql);
        fetch cur into @pro_pkid,@pro_rn;
    end;
    close cur;
    deallocate cur;
	drop table ##RangeNo;
END' 
END
GO